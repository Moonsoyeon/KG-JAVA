데이터 가공 명령(연산자)

- 산술 연산자
  - +: 두 수의 합
  - -: 두 수의 차
  - *: 두 수의 곱
  - /: 두 수의 몫
  - %: 나누기 나머지
  - 크기가 4byte 이하인 자료형은 int로 변환해서 연산한다
    - byte, char, short
  - 연산에 참여하는 데이터 중 가장 큰 데이터에 나머지 데이터의 형이 맞춰진다

- 관계 연산자
  - <  : 왼쪽항이 오른쪽 항보다 작다
  - >  : 왼쪽항이 오른쪽 항보다 크다
  - <= : 왼쪽항이 오른쪽 항보다 작거나 같다
  - >= : 왼쪽항이 오른쪽 항보다 크거나 같다
  - == : 같다
  - != : 같지 않다
  - 관계 연산의 결과는 항상 논리데이터를 생성한다
  - boolean형에서는 대소관계 연산을 수행 할 수 없다
  - 참조형에서는 대소관계 연산을 수행 할 수 없다
  - 문자열 등치비교 연산에서 equal() 메소드를 사용하여 내용을 비교 할 수 있다
  
- 대입 연산자
  - +=
  - -=
  - *=
  - /=
  - %=
  - 연산에 참여하는 변수에 그 결과를 다시 저장해야 하는 경우에 사용한다
  - 대입 연산자와 다른 연산자를 결합하여 사용한다

- 논리 연산자
AND	&&	곱하기		    	OR		||	더하기			NOT	!	부정	
true	&&	false	=	f	true	||	false	=	t	!false	=	t	
true	&&	true	=	t	true	||	true	=	t	!true	=	f	
false	&&	false	=	f	false	||	false	=	f								
false	&&	true	=	f	false	||	true	=	t								
																											
1		&&		0	=	0	1		||	0		=	1	!0		=	1	
1		&&		1	=	1	1		||	1		=	1	!1		=	0	
0		&&		0	=	0	0		||	0		=	0								
0		&&		1	=	0	0		||	1		=	1								
 
 
- Math.random() 
  - 0.0 ~ 1 보다 작은 임의의 실수를 double형으로 생성해 주는 메소드 

- 증감 연산자
  - int a = 10;
  - a = a + 1;
  - a += 1;
  - ++a : 전치연산자 / 전위연산자
  - a++ : 후치연산자 / 후위연산자
  
  - int a = 10, b = 20, c;
  - c = a + b;
  - c = ++a + b;
    31   11   20
  - c = a++ + b;
    30   11   20
    
- 조건 연산자
  - 3항 연산자
  - (1항) ? (2항) : (3항)
  - (논리값) ? (명령문1) : (명령문2)
  
- 비트 연산자
AND	& 		곱하기		OR	|		더하기	
1	&	0	=	0		1	|	0	=	1
1	&	1	=	1		1	|	1	=	1
0	&	0	=	0		0	|	0	=	0	
0	&	1	=	0		0	|	1	=	1

NOT	~	부정				XOR	^		배타적 논리합	
~0	=	1				1	^	0	=	1
~1	=	0				1	^	1	=	0
						0	^	0	=	0
						0	^	1	=	1

- 비트이동 연산
<<   >>	

- 연산자 우선 순위
1. 대입연산자, 콤마연산자의 우선순위가 가장 낮다
2. (),[], . 연산자의 우선순위가 가장 높다
3. 일반적으로 항수가 적은 연산자의 우선 순위가 높다












